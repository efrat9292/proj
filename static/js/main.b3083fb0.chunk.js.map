{"version":3,"sources":["Components/Gantt/gantt.js","Components/Gantt/DisplayGantt/displayGantt.js","Components/Header/header.js","Components/routing/routing.js","App.js","reportWebVitals.js","index.js"],"names":["Gantt","props","dataProcessor","initZoom","gantt","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","value","setLevel","this","onDataUpdated","plugins","tooltip","config","order_branch","fit_tasks","setSizes","attachEvent","id","task","priority","xml_date","tasks","ganttContainer","initGanttDataProcessor","parse","templates","scale_cell_class","date","task_class","start","end","progress","class","gantt_grid_data","task_text","text","gantt_cell","grid_row_class","columnName","column","columns","tree","width","min_width","height","max_width","resize","align","template","cardName","tooltip_date_format","date_to_str","formatFunc","old_width","new_width","message","destructor","alert","setZoom","ref","input","style","Component","DisplayGantt","projectName","console","log","allWorkspace","workspaces","allTheWorkspaces","projects","theCards","theTasks","mone","map","item","index","cards","push","indexOf","currDate","minYear","maxYear","year","start_date","split","concat","parseInt","toString","data","links","source","target","type","currentZoom","action","addMessage","withRouter","allProjects","arr","className","data-toggle","aria-haspopup","aria-expanded","project","backgroundColor","color","Routing","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3083fb0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport './gantt.css';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\nimport '../Gantt/gantt.css';\r\nexport default class Gantt extends Component {\r\n\r\n    constructor(props) {\r\n        debugger\r\n        super(props);\r\n        this.initZoom();\r\n\r\n    }\r\n\r\n\r\n\r\n    dataProcessor = null;\r\n\r\n    initZoom() {\r\n        gantt.ext.zoom.init({\r\n            levels: [\r\n\r\n                {\r\n                    name: 'Days',\r\n                    scale_height: 60,\r\n                    min_column_width: 40,\r\n\r\n                    scales: [\r\n\r\n                        { unit: \"month\", step: 1, format: \"%F %Y\" },\r\n                        { unit: \"day\", step: 1, format: \"%j\" }\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n\r\n    setZoom(value) {\r\n        gantt.ext.zoom.setLevel(value);\r\n    }\r\n\r\n    initGanttDataProcessor() {\r\n        const onDataUpdated = this.props.onDataUpdated;\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        gantt.plugins({\r\n            tooltip: true,\r\n        });\r\n        gantt.config.order_branch = true;\r\n        gantt.config.fit_tasks = true;\r\n        gantt.setSizes();\r\n        // gantt.config.autosize = \"xy\";\r\n\r\n\r\n\r\n        const myVar = [1, 2, 3, 4, 5, 6];\r\n\r\n\r\n        gantt.attachEvent(\"onBeforeTaskDisplay\", function (id, task) {\r\n            if (task.priority == \"high\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n        const { tasks } = this.props;\r\n        gantt.init(this.ganttContainer);\r\n        this.initGanttDataProcessor();\r\n        gantt.parse(tasks);\r\n\r\n        gantt.templates.scale_cell_class = function (date) {\r\n\r\n            return \"weekend\";\r\n        }\r\n        gantt.templates.task_class = function (start, end, task) {\r\n            if (task.progress > 0 && task.progress < 1) {\r\n                return task.class = \"pinkBorder\";\r\n            }\r\n            if (task.progress === 1) {\r\n                return task.class = \"greenBorder vv\";\r\n            }\r\n            else {\r\n                return task.class = \"orangeBorder\";\r\n            }\r\n        };\r\n        gantt.templates.gantt_grid_data = function (start, end) {\r\n            return \"vv\"\r\n\r\n        }\r\n        gantt.templates.task_text = function (start, end, task) {\r\n            if (task.progress > 1) {\r\n                return task.text;\r\n            }\r\n            else {\r\n                return task.text + \" \" + `<b>${(task.progress) * 100}%</b>`;\r\n            }\r\n        };\r\n        gantt.templates.gantt_cell = function (start, end, task) {\r\n            return task.text = \"knkl\";\r\n        }\r\n\r\n        gantt.templates.grid_row_class = function (columnName, column) {\r\n            return \"ll\"\r\n\r\n        };\r\n\r\n\r\n        gantt.config.columns = [\r\n            {\r\n                name: \"cardName\", tree: true, width: 190, min_width: 150, height: 900, max_width: 300,\r\n                resize: true, align: \"center\", template: myFunc\r\n            },\r\n\r\n        ];\r\n        function myFunc(task) {\r\n            if (task.cardName)\r\n                return `<div class='important'><i  class=\"material-icons  \">\r\n                arrow_drop_down\r\n                </i>${task.cardName}</div>`;\r\n        };\r\n        /////////////////////////////////////////////////\r\n        gantt.templates.tooltip_date_format = function (date) {\r\n            var formatFunc = gantt.date.date_to_str(\"%Y-%m-%d\");\r\n            return formatFunc(date);\r\n        };\r\n\r\n        gantt.attachEvent(\"onGridResizeEnd\", function (old_width, new_width) {\r\n\r\n            gantt.message(\"Grid is now <b>\" + new_width + \"</b>px width\");\r\n            return true;\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        if (this.dataProcessor) {\r\n            this.dataProcessor.destructor();\r\n            this.dataProcessor = null;\r\n        }\r\n    }\r\n    showAlert() {\r\n        alert(\"bjkbj\")\r\n    }\r\n\r\n\r\n    render() {\r\n        const { zoom } = this.props;\r\n        this.setZoom(zoom);\r\n\r\n        return (\r\n            <>\r\n                <center>\r\n                    <div ref={(input) => { this.ganttContainer = input }}\r\n                        style={{ width: \"80rem\", height: '35rem' }}>\r\n                    </div>\r\n                    {/* <span class=\"material-icons-outlined\">\r\n                        arrow_drop_down\r\n                    </span> */}\r\n                    {/* <img src={cardIcon}></img> */}\r\n                </center>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Gantt from '../gantt';\r\nimport './displayGantt.css'\r\nimport workspaces from '../workspace.json'\r\nexport default function DisplayGantt() {\r\n\r\n    const projectName = \"project1\";\r\n    console.log(projectName);\r\n    const allWorkspace = { workspaces };\r\n    console.log(allWorkspace);\r\n    const allTheWorkspaces = allWorkspace.workspaces.workspaces.projects;\r\n\r\n\r\n    const theCards = []\r\n    const theTasks = []\r\n    const mone = []\r\n\r\n    allTheWorkspaces.map((item, index) => {\r\n        {\r\n            item.name === projectName ? item.cards.map((item, index) => {\r\n                {\r\n                    theCards.push(item);\r\n                    console.log(\"pppppppp\", item)\r\n\r\n                }\r\n\r\n            })\r\n                : console.log(\"bed\", item.cards);\r\n        }\r\n    })\r\n    console.log(\"the cards\", theCards);\r\n\r\n    {\r\n        theCards.map((item, index) => {\r\n\r\n            let indexOf = 0;\r\n\r\n            item.tasks.map((item) => {\r\n                indexOf++;\r\n\r\n\r\n                theTasks.push(item)\r\n\r\n\r\n            })\r\n\r\n            mone.push(indexOf)\r\n\r\n        })\r\n\r\n    }\r\n    console.log(\"mone\", mone);\r\n    let minYear = \"3000-01-01\";\r\n    let maxYear = \"1000-01-01\";\r\n    let currDate;\r\n\r\n\r\n\r\n    {\r\n        theTasks.map((item) => {\r\n            let year = item.start_date.split('-')[0];\r\n            if (year > maxYear.split('-')[0]) {\r\n\r\n                currDate = year\r\n                console.log(\"papapap\", year);\r\n                year = year.concat('-01-01')\r\n                console.log(\"tttt\", year);\r\n                maxYear = year;\r\n            } else if (year < minYear) {\r\n                minYear = year\r\n            }\r\n            else {\r\n                return\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n    }\r\n    currDate = parseInt(currDate)\r\n    currDate = currDate + 2\r\n    currDate = currDate.toString();\r\n\r\n    currDate = currDate.concat('-01-01')\r\n\r\n    maxYear = currDate;\r\n    console.log();\r\n    theTasks.push(\r\n\r\n        {\r\n            \"id\": 2985730,\r\n            \"text\": \"first\",\r\n            \"start_date\": currDate,\r\n            \"duration\": 3,\r\n            \"progress\": 0.6,\r\n        })\r\n\r\n\r\n    console.log(\"the tasks\", theTasks);\r\n\r\n    const state = {\r\n        currentZoom: 'Days',\r\n        messages: []\r\n    };\r\n    const data = {\r\n        data: theTasks,\r\n        links: [\r\n            { id: 1, source: 7, target: 7, type: '0' }\r\n        ]\r\n    };\r\n\r\n    const logDataUpdate = (type, action, item, id) => {\r\n        let text = item && item.text ? ` (${item.text})` : '';\r\n        let message = `${type} ${action}: ${id} ${text}`;\r\n        if (type === 'link' && action !== 'delete') {\r\n            message += ` ( source: ${item.source}, target: ${item.target} )`;\r\n        }\r\n        this.addMessage(message);\r\n    }\r\n\r\n    const handleZoomChange = (zoom) => {\r\n        this.setState({\r\n            currentZoom: zoom\r\n        });\r\n    }\r\n\r\n\r\n    const { currentZoom, messages } = state;\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ width: \"40rem\" }}>\r\n                <Gantt\r\n                    tasks={data}\r\n                    zoom={currentZoom}\r\n                    onDataUpdated={logDataUpdate}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n","import { react, useEffect, useState } from 'react';\r\nimport './header.css'\r\nimport workspaces from '../Gantt/workspace.json'\r\n// import Gantt from '../Gantt/gantt'\r\n// import DisplayGantt from '../Gantt/displayGantt'\r\nimport { Route, Router, withRouter } from \"react-router-dom\";\r\nimport Switch from 'react-bootstrap/esm/Switch';\r\n// import useState from 'react-dom'\r\nfunction Header(props) {\r\n\r\n  // const [projectName, setProjectName] = useState(true);\r\n  const allWorkspace = { workspaces };\r\n  const allProjects = allWorkspace.workspaces.workspaces.projects;\r\n  // const routeToGantt = (projectName) => {\r\n  // props.history.push(`/Gantt/${projectName}`);\r\n  // }\r\n  const l = \"myName\";\r\n  // const colorCircle=allProjects.workspaces.workspaces.projects\r\n  console.log(allProjects);\r\n  const arr = []\r\n  allProjects.map((item, index) => {\r\n    arr[index] = item.name;\r\n  })\r\n  console.log(arr);\r\n\r\n  function goToGantt() {\r\n    // <Redirect to={'/Gantt'}></Redirect>\r\n    props.history.push('/Gantt/');\r\n    // history.push('/Gantt')\r\n    alert(\"camr\")\r\n  }\r\n\r\n  //const numbers = props.numbers;\r\n  // const listItemsProjectName = arr.map((number) =>\r\n  //   // <li>{number}</li>\r\n  //   <li>{number}</li>\r\n\r\n  // )\r\n\r\n\r\n\r\n\r\n  // function greetUser(e) {\r\n\r\n\r\n  // }\r\n\r\n  // const  handleClick = value => () => {\r\n\r\n\r\n  //    // history.push(`/Gantt/${value.name}`) ;\r\n  //     return \r\n  //     // <Redirect to='/Gantt/' />\r\n  //     <Redirect to={\"/Gantt/\" + value.name} />\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"container \">\r\n        <div className=\"row  header2\">\r\n\r\n        </div>\r\n        <div className=\"row header1\">\r\n          <div className=\"col-3\">\r\n            <div className=\"btn-group\">\r\n\r\n              <div className=\"dropBtn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Projects\r\n                   </div>\r\n\r\n              <div className=\"   dropContainer dropdown-menu dropdown-menu-right container \">\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n\r\n                  </div>\r\n\r\n                  {allProjects.map((project) =>\r\n\r\n                    <div className=\" row mt-2\"\r\n\r\n                    >\r\n                      <div className=\"col-1  itemCircle ml-3\" style={{ backgroundColor: project.color ? project.color : \"blue\" }}>   {project.name[0]} </div>\r\n                      <div className=\"col-1 \">\r\n\r\n\r\n                        {/* <Router>\r\n                          <nav >\r\n                            <Switch>\r\n                              <Route path=\"/Gantt/:projectName\">\r\n                                <Gantt />\r\n                              </Route>\r\n                            </Switch> */}\r\n\r\n                        <button\r\n                          // onClick={() => routeToGantt(project.name)}\r\n                          className=\" dropdown-item dropItem \"\r\n\r\n                        >\r\n\r\n                          {/* <Link to={`/Gantt/${project.name}`}> */}\r\n                          {project.name}\r\n                          {/* </Link> */}\r\n                        </button>\r\n\r\n\r\n\r\n\r\n                        {/* </nav>\r\n                        </Router> */}\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n                  )\r\n\r\n\r\n                  }\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div> <div className=\"col-3\">\r\n\r\n          </div>\r\n          <div className=\"col-3 gantt\">\r\n            Gantt\r\n    </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </>\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\nexport default withRouter(Header)","import { react, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter, useParams, Redirect, useHistory } from \"react-router-dom\";\r\nimport Header from '../Header/header';\r\n// import Gantt from '../Gantt/gantt';\r\nimport DisplayGantt from '../Gantt/DisplayGantt/displayGantt';\r\n// import { createBrowserHistory } from 'history';\r\n// export const history = createBrowserHistory({ forceRefresh: true });\r\n\r\nexport default function Routing() {\r\n\r\n    return (\r\n        <>\r\n\r\n            <Router>\r\n                <center>\r\n                    <Header></Header>\r\n                </center>\r\n                <Switch>\r\n                    <Route path='/DisplayGantt/:projectName'>\r\n                        <DisplayGantt />\r\n                    </Route>\r\n                </Switch>\r\n\r\n            </Router>\r\n        </>\r\n\r\n    );\r\n}","\nimport React, { Component } from 'react';\nimport Gantt from './Components/Gantt/gantt';\nimport './App.css';\nimport DisplayGantt from './Components/Gantt/DisplayGantt/displayGantt';\nimport Routing from './Components/routing/routing';\nimport Configurator from './Components/Configurator/Configurator';\n\n\nexport default function App() {\n\n  return (\n    <div>\n      <Routing></Routing>\n      <br></br>\n\n      <DisplayGantt></DisplayGantt>\n\n    </div>\n  );\n\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}